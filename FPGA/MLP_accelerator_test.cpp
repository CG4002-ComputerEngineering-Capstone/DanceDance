#include <stdio.h>

#define SIZE_INPUT 210
#define SIZE_OUTPUT 9


//DANCE_TO_NUM_MAP = {'dab': 0, 'jamesbond': 1, 'mermaid': 2,
//                   'scarecrow': 3, 'pushback': 4, 'cowboy': 5,
//                   'window360': 6, 'snake': 7, 'logout2': 8}
void accelerate_MLP(float input[SIZE_INPUT], float output[SIZE_OUTPUT]);

int main() {
	float input[SIZE_INPUT] = { 0.00000000e+00,  6.10351562e-05,  1.22070312e-04,  1.52587891e-04,
	        1.83105469e-04,  1.52587891e-04,  1.83105469e-04,  1.83105469e-04,
	        3.96728516e-04,  5.49316406e-04,  5.49316406e-04,  4.27246094e-04,
	       -5.18798828e-04, -7.62939453e-04, -2.89916992e-03, -2.89916992e-03,
	       -1.70898438e-03,  2.44140625e-04,  1.98364258e-03,  2.80761719e-03,
	        3.75366211e-03,  3.75366211e-03,  2.22778320e-03,  3.35693359e-04,
	       -2.44140625e-03, -4.51660156e-03, -5.88989258e-03, -5.88989258e-03,
	       -2.19726562e-03,  3.66210938e-04,  3.20434570e-03,  4.51660156e-03,
	        4.60815430e-03,  4.60815430e-03,  2.13623047e-03, -1.09863281e-03,
	       -6.10351562e-03, -6.10351562e-03, -6.07299805e-03, -4.88281250e-03,
	       -3.05175781e-03,  0.00000000e+00,  0.00000000e+00, -2.62451172e-03,
	       -2.62451172e-03, -2.62451172e-03, -2.65502930e-03, -2.65502930e-03,
	       -2.56347656e-03, -2.56347656e-03, -2.56347656e-03, -2.74658203e-03,
	       -3.05175781e-03, -3.38745117e-03, -3.47900391e-03, -3.47900391e-03,
	       -2.68554688e-03, -1.58691406e-03, -1.00708008e-03, -6.71386719e-04,
	       -3.66210938e-04, -9.15527344e-05, -9.15527344e-05, -4.88281250e-04,
	       -1.67846680e-03, -2.56347656e-03, -2.56347656e-03, -2.31933594e-03,
	       -1.89208984e-03, -8.23974609e-04, -9.15527344e-05,  2.13623047e-04,
	        3.96728516e-04,  1.06811523e-03,  1.06811523e-03,  7.93457031e-04,
	       -7.32421875e-04, -2.62451172e-03, -3.35693359e-03, -3.35693359e-03,
	       -2.96020508e-03, -1.40380859e-03,  0.00000000e+00,  0.00000000e+00,
	        0.00000000e+00,  1.49536133e-03,  1.49536133e-03,  1.43432617e-03,
	        1.43432617e-03,  1.43432617e-03,  1.52587891e-03,  1.52587891e-03,
	        1.34277344e-03,  9.15527344e-04,  3.96728516e-04, -1.83105469e-04,
	       -1.83105469e-04,  6.10351562e-04,  2.96020508e-03,  5.21850586e-03,
	        5.21850586e-03,  4.24194336e-03,  2.96020508e-03,  1.52587891e-03,
	       -3.66210938e-04, -2.99072266e-03, -4.94384766e-03, -4.97436523e-03,
	       -4.97436523e-03, -2.01416016e-03,  1.73950195e-03,  6.25610352e-03,
	        6.25610352e-03,  6.22558594e-03,  4.45556641e-03,  2.59399414e-03,
	        5.49316406e-04, -1.86157227e-03, -5.24902344e-03, -5.92041016e-03,
	       -5.92041016e-03, -2.28881836e-03,  1.22070312e-03,  4.69970703e-03,
	        6.53076172e-03,  6.53076172e-03,  0.00000000e+00, -9.15527344e-04,
	       -1.00708008e-03, -1.06811523e-03, -1.15966797e-03, -1.06811523e-03,
	       -1.15966797e-03, -1.15966797e-03, -1.61743164e-03, -1.64794922e-03,
	       -1.64794922e-03, -1.43432617e-03,  4.27246094e-04,  8.54492188e-04,
	        2.99072266e-03,  2.99072266e-03,  2.04467773e-03, -5.79833984e-04,
	       -4.69970703e-03, -9.06372070e-03, -9.06372070e-03, -7.93457031e-03,
	       -4.18090820e-03, -9.15527344e-04,  2.31933594e-03,  7.11059570e-03,
	        7.11059570e-03,  4.39453125e-03,  1.86157227e-03, -3.66210938e-04,
	       -4.36401367e-03, -7.23266602e-03, -9.39941406e-03, -9.39941406e-03,
	       -4.97436523e-03,  0.00000000e+00,  5.40161133e-03,  7.41577148e-03,
	        7.41577148e-03,  5.31005859e-03,  3.20434570e-03,  0.00000000e+00,
	        0.00000000e+00, -1.19018555e-03, -1.34277344e-03, -1.40380859e-03,
	       -1.40380859e-03, -1.31225586e-03, -1.12915039e-03, -1.12915039e-03,
	       -1.46484375e-03, -2.31933594e-03, -3.69262695e-03, -3.90625000e-03,
	       -3.90625000e-03, -2.59399414e-03,  2.92968750e-03,  4.60815430e-03,
	        4.60815430e-03,  4.21142578e-03,  4.18090820e-03,  4.21142578e-03,
	        4.02832031e-03,  3.93676758e-03,  3.08227539e-03,  3.08227539e-03,
	        3.14331055e-03,  4.63867188e-03,  7.01904297e-03,  7.01904297e-03,
	        6.62231445e-03,  6.13403320e-03,  6.04248047e-03,  5.85937500e-03,
	        5.85937500e-03,  4.82177734e-03,  3.84521484e-03,  3.84521484e-03,
	        4.33349609e-03,  4.51660156e-03,  4.63867188e-03,  5.70678711e-03,
	        6.89697266e-03,  6.89697266e-03};

	float expected_output[SIZE_OUTPUT] = {-101.682968,
			-33.279076,
			-79.488701,
			-115.589394,
			-63.243614,
			42.509651,
			33.887165,
			-62.022045,
			-62.191422};

	float output[SIZE_OUTPUT] = {0};

	int i, j;

	accelerate_MLP(input, output);

	for (i = 0; i < SIZE_OUTPUT; i++) {
		printf("%f\n", output[i]);
	}

	// Compare output and expected output
	for (i = 0; i < SIZE_OUTPUT; i++) {
		float diff = expected_output[i] - output[i];
		// Output may not be exactly the same for floating point comparison
		if (diff > 0.1 || diff < -0.1) {
			printf("Fail\r\n");
			return 0;
		}
	}

	printf("Success\r\n");

	return 0;
}
